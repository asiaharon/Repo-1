<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="My Sample Suite" duration-ms="61" started-at="2015-10-15T13:14:59Z" finished-at="2015-10-15T13:14:59Z">
    <groups>
    </groups>
    <test name="Send Recieve Email Test" duration-ms="15" started-at="2015-10-15T13:14:59Z" finished-at="2015-10-15T13:14:59Z">
      <class name="tests.TestNg_Annotations">
        <test-method status="PASS" signature="openConnection()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="openConnection" is-config="true" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openConnection -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="openBrowser" is-config="true" duration-ms="1" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="testRecieveMail()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="testRecieveMail" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecieveMail -->
        <test-method status="PASS" signature="testSendMail()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="testSendMail" duration-ms="1" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendMail -->
        <test-method status="PASS" signature="clseBrowser()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="clseBrowser" is-config="true" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clseBrowser -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="openBrowser" is-config="true" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="clseBrowser()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="clseBrowser" is-config="true" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clseBrowser -->
        <test-method status="PASS" signature="closeConnection()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="closeConnection" is-config="true" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeConnection -->
      </class> <!-- tests.TestNg_Annotations -->
    </test> <!-- Send Recieve Email Test -->
    <test name="Check Email Test" duration-ms="1" started-at="2015-10-15T13:14:59Z" finished-at="2015-10-15T13:14:59Z">
      <class name="tests.Second_TestNg">
        <test-method status="SKIP" signature="beforeTest()[pri:0, instance:tests.Second_TestNg@1fbc7afb]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping test description]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping test description
	at tests.Second_TestNg.beforeTest(Second_TestNg.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.TestNG.privateMain(TestNG.java:1338)
	at org.testng.TestNG.main(TestNG.java:1307)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="checkEmail()[pri:0, instance:tests.Second_TestNg@1fbc7afb]" name="checkEmail" duration-ms="0" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkEmail -->
      </class> <!-- tests.Second_TestNg -->
    </test> <!-- Check Email Test -->
    <test name="Data Registration Test" duration-ms="2" started-at="2015-10-15T13:14:59Z" finished-at="2015-10-15T13:14:59Z">
      <class name="tests.TestNg_Parameters">
        <test-method status="PASS" signature="registerData(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.TestNg_Parameters@c818063]" name="registerData" duration-ms="0" started-at="2015-10-15T14:14:59Z" data-provider="testData" finished-at="2015-10-15T14:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[email3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[city3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerData -->
        <test-method status="PASS" signature="registerData(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.TestNg_Parameters@c818063]" name="registerData" duration-ms="0" started-at="2015-10-15T14:14:59Z" data-provider="testData" finished-at="2015-10-15T14:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[email2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[city2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerData -->
        <test-method status="PASS" signature="registerData(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.TestNg_Parameters@c818063]" name="registerData" duration-ms="0" started-at="2015-10-15T14:14:59Z" data-provider="testData" finished-at="2015-10-15T14:14:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[email1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[city1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerData -->
      </class> <!-- tests.TestNg_Parameters -->
    </test> <!-- Data Registration Test -->
    <test name="Delete Email Test" duration-ms="3" started-at="2015-10-15T13:14:59Z" finished-at="2015-10-15T13:14:59Z">
      <class name="tests.TestNg_Annotations">
        <test-method status="PASS" signature="initialiseSelenium()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="initialiseSelenium" is-config="true" duration-ms="12" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseSelenium -->
        <test-method status="PASS" signature="shotdownSelenium()[pri:0, instance:tests.TestNg_Annotations@1ae369b7]" name="shotdownSelenium" is-config="true" duration-ms="2" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shotdownSelenium -->
      </class> <!-- tests.TestNg_Annotations -->
      <class name="tests.TestNg_Assertions">
        <test-method status="PASS" signature="deleteEmail()[pri:0, instance:tests.TestNg_Assertions@5a39699c]" name="deleteEmail" duration-ms="3" started-at="2015-10-15T14:14:59Z" finished-at="2015-10-15T14:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmail -->
      </class> <!-- tests.TestNg_Assertions -->
    </test> <!-- Delete Email Test -->
  </suite> <!-- My Sample Suite -->
</testng-results>
